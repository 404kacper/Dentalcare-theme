@use "sass:math";

// Utility classes
.navbar-transform-bg {
  background-color: $navbar-second-bg;
}
.navbar-transform-text {
  color: $navbar-second-font;
}

.wrapper {
  margin: 0 15vw 0 15vw;
}



// Zoom animation on hero section
@keyframes zoomIn {
  0% {
    filter: brightness($hero-brightness);
    // transform: translateZ($parallax-distanceZ) scale(2);
  }
  100% {
    filter: brightness($hero-brightness);
    transform: scale($zoom-scale);
    // transform: translateZ($parallax-distanceZ) scale(3);
  }
}

// Typography animation on hero section
@keyframes slidein {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

@keyframes reveal {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

// Media Query Mixins
@mixin mediaSm {
  @media screen and (max-width: 500px) {
    @content;
  }
}

@mixin mediaMd {
  @media screen and (max-width: 768px) {
    @content;
  }
}

@mixin mediaLg {
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}

@mixin mediaXl {
  @media screen and (min-width: 1171px) {
    @content;
  }
}

@function strip-unit($value) {
  @return math.div($value, ($value * 0 + 1));
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}